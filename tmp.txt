const gchar *message1 = "text";
const gchar *message2 = "text";
ui_set_statusbar(TRUE, "message1 = %s", message1); // esh: log
ui_set_statusbar(TRUE, "message1 = %s, message2 = %s", message1, message2); // esh: log

ui_set_statusbar(TRUE, "No more message items."); // esh: log
----------------------------------------------------------------------------------------

	ui_set_statusbar(TRUE, "tmtag: "
		"name = %s, type = %d, scope = %s, var_type = %s, file = %s, "
		"arglist = %s, lang = %d, impl = %s, inheritance = %s",
		tmtag->name, tmtag->type, tmtag->scope, tmtag->var_type, 
		tmtag->file->short_name, tmtag->arglist, tmtag->lang,
		tmtag->impl, tmtag->inheritance); // esh: log
----------------------------------------------------------------------------------------

configuration_reload_default_session (geany.conf)
load_settings -> configuration_load (geany.conf)
load_startup_files -> (main_load_project_from_command_line, load_session_project_file) -> project_load_file -> load_config (*.geany)
project_load_file_with_session -> -> project_load_file -> load_config (*.geany)
	-> configuration_load_session_files
	-> configuration_save_default_session


(configuration_save, configuration_save_default_session, write_config) -> configuration_save_session_files
project_new -> configuration_clear_default_session
	-> remove_session_files


vte_start -> (vte_terminal_spawn_sync, vte_terminal_fork_command)
vte_send_cmd -> vte_terminal_feed_child
----------------------------------------------------------------------------------------

keybindings/goto_tag -> symbols/symbols_goto_tag -> symbols/goto_tag
----------------------------------------------------------------------------------------

--string example1:
	wildcard = g_strndup(cmd, (gsize) (match - cmd + 1));
	cmd = g_strndup(wildcard + 9, strlen(wildcard) - 10);

--string example2:
	return g_strndup(&text[start], end - start);

--string example3:
	len = (gsize)(cur - begin);
	return len ? g_strndup(begin, len) : NULL;
----------------------------------------------------------------------------------------

--if example1:
if (g_strcmp0(documents[j]->real_path, tag->file->file_name) == 0)

--if example2:
gchar *dir = g_path_get_dirname(doc->real_path);
if (g_str_has_prefix(tag->file->file_name, dir))
----------------------------------------------------------------------------------------

--C:
tmtag: scope = (null), name = find_tags, type = 16, var_type = void, file = prjorg-sidebar.c, arglist = (const gchar *name, gboolean declaration, gboolean case_sensitive, MatchType match_type, gchar *utf8_path)
tmtag: scope = (null), name = find_tags, type = 16, var_type = void, file = geanyctags.c, arglist = (const gchar *name, gboolean declaration, gboolean case_sensitive, MatchType match_type)
tmtag: scope = (null), name = MatchType, type = 4096, var_type = anon_enum_1, file = prjorg-sidebar.c, arglist = (null)
tmtag: scope = (null), name = MatchType, type = 4096, var_type = anon_enum_2, file = geanyctags.c, arglist = (null)

--Erlang:
tmtag: scope = adptransfer_log, name = warn, type = 16, var_type = (null), file = adptransfer_log.erl, arglist = (null)

--Python:
tmtag: scope = encode_revisions, name = append, type = 16, var_type = (null), file = helper.py, arglist = (start, last, list)
tmtag: scope = VCSAction, name = append, type = 128, var_type = (null), file = action.py, arglist = (self, func, *args, **kwargs)
tmtag: scope = VCSAction, name = __init__, type = 128, var_type = (null), file = action.py, arglist = (self, client, register_gtk_quit=False, notification=True,
tmtag: scope = GitAction, name = __init__, type = 128, var_type = (null), file = action.py, arglist = (self, client, register_gtk_quit=False, notification=True,
tmtag: scope = InterfaceView, name = __init__, type = 128, var_type = (null), file = __init__.py, arglist = (self, *args, **kwargs)
tmtag: scope = GtkContextMenu, name = get_widget, type = 128, var_type = (null), file = contextmenu.py, arglist = (self)
tmtag: scope = GtkBuilderWidgetWrapper, name = get_widget, type = 128, var_type = (null), file = __init__.py, arglist = (self, id = None)
tmtag: scope = (null), name = GtkContextMenuCaller, type = 32768, var_type = (null), file = browser.py, arglist = (null)
tmtag: scope = (null), name = vcs, type = 32768, var_type = (null), file = log.py, arglist = (null)
tmtag: scope = (null), name = vcs, type = 32768, var_type = (null), file = action.py, arglist = (null)

--filter by file:
include tags: 32768 | 4096 | 16
no check empty(cursor scope)
----------------------------------------------------------------------------------------

	gint offset;
	gint line_no;

	g_return_if_fail(doc != NULL);

	get_line_and_offset_from_text(result, &line_no, &offset);
	if (! editor_goto_line(doc->editor, line_no, offset))
		utils_beep();
----

	GeanyDocument *new_doc, *old_doc;

	g_return_if_fail(tag);

	old_doc = document_get_current();
	new_doc = document_open_file(tag->file->file_name, FALSE, NULL, NULL);

	if (new_doc)
		navqueue_goto_line(old_doc, new_doc, tag->line);
----------------------------------------------------------------------------------------
