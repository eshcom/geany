[styling]
# Edit these in the colorscheme .conf file instead
default=default
unknown=default
std_word=keyword_1
add_word=keyword_1
std_atom=default
std_func=keyword_2
std_module=default
std_module_attr=preprocessor
std_erl_module=default
std_except=default
std_macro=preprocessor
type_func=keyword_2
# style for lib_macros keywords
lib_macro=identifier_1
# style for lib_macros keywords with opening parenthesis
lib_func=identifier_1
operator=operator
map_oper=operator
capture_oper=operator
function=function
defname=function
module=default
module_attr=preprocessor
erl_module=default
identifier=identifier_1
atom=default
node=default
field=default
number=number_1
triple=string_1
tripleval=string_2
string=string_1
stringval=string_2
charstr=string_1
charstrval=string_2
literal=string_1
literalval=string_2
literaltriple=string_1
literaltripleval=string_2
character=character
escapeseq=string_1
formatseq=string_1
string_suboper=string_1
atom_punct=default
atom_quoted=string_1
node_quoted=string_1
comment=comment

[keywords]
# Standard keywords
std_words=after and as case catch cond def defdelegate defexception defguard defguardp defimpl defmacro defmacrop defmemo defmemop defmodule defoverridable defp defprotocol defstruct do else end fn for if in not or quote raise receive reraise rescue try unless unquote unquote_splicing when with
# Additional keywords
add_words=alias import require use
# Standard atoms
std_atoms=true false nil :true :false :nil
# Standard functions (BIFs)
std_funcs=abs alias! apply binary_part binary_slice binding bit_size byte_size ceil dbg destructure div elem exit floor function_exported? get_and_update_in get_in hd inspect is_atom is_binary is_bitstring is_boolean is_exception is_float is_function is_integer is_list is_map is_map_key is_nil is_non_struct_map is_number is_pid is_port is_reference is_struct is_tuple length macro_exported? make_ref map_size match? max min node pop_in put_elem put_in rem round self send sigil_C sigil_D sigil_N sigil_R sigil_S sigil_T sigil_U sigil_W sigil_c sigil_r sigil_s sigil_w spawn spawn_link spawn_monitor struct struct! super tap then throw tl to_charlist to_string to_timeout trunc tuple_size update_in var!
# Standard modules (BIMs)
std_modules=^AMQP. ^Argon2. ^Bamboo. ^BambooSMTP. ^Bandit. ^Benchee. ^Broadway. ^BroadwayKafka. ^BroadwayRabbitMQ. ^Bureaucrat. ^Cachex. ^Calendar. ^Cluster. ^Code. ^Config. ^Corsica. ^Crontab. ^DBConnection. ^Date. ^EEx. ^Ecto. ^ExCoveralls. ^ExMachina. ^ExUnit. ^ExUnitSummary. ^File. ^Graph. ^IEx. ^IO. ^Inspect. ^JUnitFormatter. ^Jason. ^Jsonrs. ^Kernel. ^Keycloak. ^List. ^Logger. ^Macro. ^Memoize. ^Mint. ^Mix. ^NimbleCSV. ^OpenApiSpex. ^Parent. ^Phoenix. ^PhoenixSwagger. ^PhxKeycloak. ^Plug. ^Postgrex. ^PromEx. ^Quantum. ^Recode. ^Sentry. ^Sobelow. ^String. ^Supervisor. ^Task. ^Telemetry. ^Tesla. ^Version. AMQP Access Accessible Agent Application Argon2 Atom Bamboo BambooSMTP Bandit Base Behaviour Benchee Bitwise Broadway BroadwayKafka BroadwayRabbitMQ Bureaucrat CAStore Cachex Calendar Cluster Code Collectable Config Corsica Crontab DBConnection Date DateTime Dict Duration DynamicSupervisor EEx Ecto Elixir Enum Enumerable ExCoveralls ExMachina ExUnit ExUnitSummary Exception File Float Function GenEvent GenServer Graph HashDict HashSet IEx IO Inspect Integer JUnitFormatter Jason Jsonrs Kernel Keycloak Keyword List Logger LoggerBackends.Console Macro Map MapSet Memoize Mint Mix Mock Module NaiveDateTime NimbleCSV Node OpenApiSpex OptionParser Parent PartitionSupervisor Path Phoenix PhoenixSwagger PhxKeycloak Plug Port Postgrex Process PromEx Protocol Quantum Range Recode Record Regex Registry Sentry Set Sobelow Stream String StringIO Supervisor System Task Telemetry Tesla Time Tuple URI UUID Version
# Standard module attributes
std_module_attrs=@after_compile @before_compile @behaviour @callback @compile @deprecated @derive @dialyzer @doc @external_resource @file @impl @macrocallback @moduledoc @on_definition @on_load @opaque @optional_callbacks @spec @type @typedoc @typep @vsn
# Erlang modules (Erlang BIMs)
std_erl_modules=^:brod_ ^:cerl_ ^:ct_ ^:diameter_ ^:digraph_ ^:edlin_ ^:edoc_ ^:eflambe_ ^:erl_ ^:error_ ^:et_ ^:eunit_ ^:file_ ^:gb_ ^:gen_ ^:global_ ^:hackney_ ^:httpd_ ^:inet_ ^:io_ ^:logger_ ^:megaco_ ^:merl_ ^:mnesia_ ^:mod_ ^:net_ ^:os_ ^:poolboy_ ^:shell_ ^:snmp_ ^:snmpa_ ^:snmpm_ ^:ssh_ ^:ssl_ ^:supervisor_ ^:syn_ ^:telemetry_ ^:tftp_ ^:wxAccelerator ^:wxAui ^:wxBitmap ^:wxBookCtrl ^:wxBuffered ^:wxCalendar ^:wxCheck ^:wxChoice ^:wxClipboard ^:wxColour ^:wxControl ^:wxDC ^:wxDate ^:wxDir ^:wxDisplay ^:wxFile ^:wxFindReplace ^:wxFont ^:wxGL ^:wxGraphics ^:wxGrid ^:wxHtml ^:wxIcon ^:wxImage ^:wxList ^:wxMDI ^:wxMenu ^:wxMouse ^:wxPageSetup ^:wxPaint ^:wxPalette ^:wxPopup ^:wxPreview ^:wxPrint ^:wxRadio ^:wxSash ^:wxScroll ^:wxSizer ^:wxSpin ^:wxSplitter ^:wxStatic ^:wxStyledText ^:wxSystem ^:wxTaskBar ^:wxText ^:wxTool ^:wxTree ^:wxWebView ^:wxWindow ^:wx_ ^:xmerl_ :alarm_handler :application :argparse :array :asn1ct :atomics :auth :base64 :beam_lib :binary :brod :c :calendar :cerl :code :compile :counters :cover :cprof :cpu_sup :crashdump_viewer :crypto :ct :dbg :debugger :dets :dialyzer :diameter :dict :digraph :disk_log :disksup :dyntrace :edlin :edoc :eflambe :eldap :epp :epp_dodger :eprof :erlang :erpc :error :escript :et :etop :ets :eunit :exit :file :filelib :filename :fprof :ftp :gl :global :glu :hackney :heart :http_uri :httpc :httpd :i :inet :inets :init :instrument :int :io :json :jsx :lcnt :leex :lists :log_mf_h :logger :make :maps :math :megaco :memsup :merl :mnesia :ms_transform :msacc :net :nteventlog :observer :observer_cli :odbc :orddict :ordsets :os :peer :persistent_term :pg :pool :poolboy :prettypr :proc_lib :proplists :public_key :python :qlc :queue :rand :random :rb :re :release_handler :reltool :rpc :ruby :scheduler :seq_trace :sets :shell :slave :snmp :snmpa :snmpc :snmpm :socket :sofs :ssh :ssl :string :supervisor :syn :sys :system_information :systools :tags :telemetry :tftp :throw :timer :tprof :trace :ttb :unicode :unix_telnet :uri_string :win32reg :wrap_log_reader :wx :wxActivateEvent :wxArtProvider :wxBoxSizer :wxBrush :wxButton :wxCaret :wxChildFocusEvent :wxClientDC :wxCloseEvent :wxComboBox :wxCommandEvent :wxContextMenuEvent :wxCursor :wxDataObject :wxDialog :wxDropFilesEvent :wxEraseEvent :wxEvent :wxEvtHandler :wxFlexGridSizer :wxFocusEvent :wxFrame :wxGBSizerItem :wxGCDC :wxGauge :wxGenericDirCtrl :wxHelpEvent :wxIdleEvent :wxInitDialogEvent :wxJoystickEvent :wxKeyEvent :wxLayoutAlgorithm :wxLocale :wxLogNull :wxMask :wxMaximizeEvent :wxMemoryDC :wxMessageDialog :wxMiniFrame :wxMirrorDC :wxMoveEvent :wxMultiChoiceDialog :wxNavigationKeyEvent :wxNotebook :wxNotificationMessage :wxNotifyEvent :wxOverlay :wxPanel :wxPasswordEntryDialog :wxPen :wxPickerBase :wxPostScriptDC :wxProgressDialog :wxQueryNewPaletteEvent :wxRegion :wxScreenDC :wxSetCursorEvent :wxShowEvent :wxSingleChoiceDialog :wxSizeEvent :wxSlider :wxSplashScreen :wxStatusBar :wxStdDialogButtonSizer :wxSysColourChangedEvent :wxToggleButton :wxTopLevelWindow :wxUpdateUIEvent :wxXmlResource :xmerl :xref :yecc :zip :zlib
# Standard exceptions
std_excepts=AMQP.BasicError ArgumentError ArithmeticError BadArityError BadBooleanError BadFunctionError BadMapError BadStructError Bamboo.ApiError Bamboo.EmptyFromAddressError Bamboo.NilRecipientsError Bamboo.SentEmail.DeliveriesError Bamboo.SentEmail.NoDeliveriesError Bandit.HTTP2.Errors.ConnectionError Bandit.HTTP2.Errors.StreamError Bandit.HTTPError Bandit.TransportError Benchee.Profile.Benchee.UnknownProfilerError Cachex.Error CaseClauseError Code.LoadError CompileError CondClauseError DBConnection.ConnectionError DBConnection.EncodeError DBConnection.OwnershipError DBConnection.TransactionError Ecto.CastError Ecto.ChangeError Ecto.ConstraintError Ecto.InvalidChangesetError Ecto.InvalidURLError Ecto.MigrationError Ecto.MultiplePrimaryKeyError Ecto.MultipleResultsError Ecto.NoPrimaryKeyFieldError Ecto.NoPrimaryKeyValueError Ecto.NoResultsError Ecto.Query.CastError Ecto.Query.CompileError Ecto.QueryError Ecto.StaleEntryError Ecto.SubQueryError Enum.EmptyError Enum.OutOfBoundsError ErlangError ExCoveralls.InvalidConfigError ExCoveralls.InvalidOptionError ExCoveralls.ReportUploadError ExMachina.UndefinedFactoryError ExUnit.AssertionError ExUnit.DocTest.Error ExUnit.DuplicateDescribeError ExUnit.DuplicateTestError ExUnit.MultiError ExUnit.TimeoutError File.CopyError File.Error File.LinkError File.RenameError FunctionClauseError Graph.EdgeSpecificationError IO.StreamError Inspect.Error Jason.DecodeError Jason.EncodeError Kernel.TypespecError KeyError MatchError Mint.HTTPError Mint.TransportError MismatchedDelimiterError Mix.ElixirVersionError Mix.Error Mix.InvalidTaskError Mix.NoProjectError Mix.NoTaskError NimbleCSV.ParseError OpenApiSpex.SchemaException OptionParser.ParseError Phoenix.ActionClauseError Phoenix.MissingParamError Phoenix.NotAcceptableError Phoenix.Router.MalformedURIError Phoenix.Router.NoRouteError Phoenix.Socket.InvalidMessageError Plug.BadRequestError Plug.CSRFProtection.InvalidCSRFTokenError Plug.CSRFProtection.InvalidCrossOriginRequestError Plug.Conn.AlreadySentError Plug.Conn.CookieOverflowError Plug.Conn.InvalidHeaderError Plug.Conn.InvalidQueryError Plug.Conn.NotSentError Plug.Conn.WrapperError Plug.Parsers.BadEncodingError Plug.Parsers.ParseError Plug.Parsers.RequestTooLargeError Plug.Parsers.UnsupportedMediaTypeError Plug.Router.InvalidSpecError Plug.Router.MalformedURIError Plug.Static.InvalidPathError Plug.TimeoutError Plug.UploadError Postgrex.Error Postgrex.QueryError Protocol.UndefinedError Regex.CompileError RuntimeError Sentry.ClientError SyntaxError System.EnvError SystemLimitError Tesla.Error Tesla.Mock.Error TokenMissingError TryClauseError URI.Error UndefinedFunctionError UnicodeConversionError Version.InvalidRequirementError Version.InvalidVersionError WithClauseError
# Standard macros
std_macros=__CALLER__ __DIR__ __ENV__ __MODULE__ __STACKTRACE__ __aliases__ __block__ __cursor__
# Built-in type functions
type_funcs=any arity as_boolean atom binary bitstring boolean byte char charlist float fun function identifier integer iodata iolist keyword list map maybe_improper_list mfa module neg_integer no_return node non_neg_integer none nonempty_binary nonempty_bitstring nonempty_charlist nonempty_improper_list nonempty_list nonempty_maybe_improper_list number pid port pos_integer reference struct term timeout tuple
# Lib macros (Bureaucrat/Ecto/ExMachina/ExUnit/Phoenix/Plug/...)
lib_macros=accepts action_fallback action_name add add_error add_if_not_exists after_suite aggregate all allow allow_jsonp alter append apply_action apply_action! apply_changes assert assert_belongs_to assert_broadcast assert_called assert_called_exactly assert_error_sent assert_fields assert_has_many assert_has_one assert_in_delta assert_is_ecto_schema assert_not_called assert_push assert_raise assert_receive assert_received assert_reply assert_schema assert_schema_module_exists assert_schema_table_exists assert_schema_table_name assign assoc assoc_constraint assoc_loaded? async_run await_run belongs_to broadcast broadcast! broadcast_from broadcast_from! build build_assoc build_conn build_list build_pair builder_opts bypass_through call_history called camelize capture_io capture_log cast cast_assoc cast_embed catch_error catch_exit catch_throw change changed? channel check_constraint checked_out? checkin checkout child_spec chunk clear_flash clear_session close compile config config_env config_target configuration configure configure_session conn connect constraint constraints controller_module create create_if_not_exists current_path current_url ddl_logs decrypt default_description delete delete! delete_all delete_change delete_csrf_token delete_req_cookie delete_req_header delete_resp_cookie delete_resp_header delete_session describe direction disconnect_all dispatch distinct doc doc_broadcast_from doc_broadcast_from! doc_connect doc_push doctest doctest_file drop drop_if_exists dynamic embedded_dump embedded_load embedded_schema embeds_many embeds_one empty_values encrypt endpoint_module ensure_recycled error eval evaluate_lazy_attributes except except_all exclude exclusion_constraint execute execute_ddl execute_file exists? explain explain_query failure_info fetch_change fetch_change! fetch_cookies fetch_field fetch_field! fetch_flash fetch_query_params fetch_session fetch_test_supervisor field field_missing? first flunk flush force_change foreign_key_constraint format_assertion_diff format_filters format_test_all_failure format_test_failure format_test_name format_times forward fragment from get get! get_assoc get_by get_by! get_change get_csrf_token get_default_operation_id get_embed get_field get_flash get_format get_http_protocol get_last_registered_test get_meta get_peer_data get_req_header get_resp_header get_session group_by group_title_for halt has_many has_named_binding? has_one having head html html_escape html_escape_to_iodata html_response humanize import_config in_series in_transaction? index inform inform! init_test_session insert insert! insert_all insert_list insert_or_update insert_or_update! insert_pair intercept intersect intersect_all is_named_binding join json json_library json_response last layout layout_formats leave limit live_dashboard load lock lock_for_migrations many_to_many match match_path merge merge_assigns merge_attributes merge_flash merge_private merge_req_headers merge_resp_headers mock_modules mode modify name_from_struct new no_assoc_constraint normalize offset on_exit one one! operation optimistic_lock options or_having or_where order_by params_for params_with_assocs parse parse_path parse_paths passthrough patch path path_params pipe_through pipeline plug plug_doc plug_init_mode plural_rule post prefix preload prepare_changes prepare_execute prepend prepend_order_by prepend_req_headers prepend_resp_headers primary_key primary_key! protect_from_forgery push push! put put_assoc put_change put_embed put_flash put_format put_http_protocol put_layout put_layout_formats put_meta put_new_layout put_new_view put_peer_data put_private put_query_prefix put_req_cookie put_req_header put_resp_content_type put_resp_cookie put_resp_header put_root_layout put_router_url put_secure_browser_headers put_session put_static_url put_status put_view query query! query_many query_many! read_body read_part_body read_part_headers recursive_ctes recycle recycle_cookies redirect redirected_params redirected_to references refute refute_broadcast refute_in_delta refute_push refute_receive refute_received refute_reply register_attribute register_before_send register_describe_attribute register_module_attribute register_test reload reload! remove remove_if_exists rename render reply repo request_url reset reset_fields resource_name resources resp response response_content_type reverse_order rollback root_layout router_module routes run schema scope scoped_alias scrub_params select select_merge send_chunked send_download send_file send_resp sent_informs sent_pushes sent_resp sent_upgrades sequence setup setup_all setup_with_mocks sigil_p sign socket socket_ref start start_link_supervised! start_owner! start_supervised start_supervised! static_integrity static_path static_url status_message_from_template stop_owner stop_supervised stop_supervised! stream string_params_for string_params_with_assocs subquery subscribe_and_join subscribe_and_join! supports_ddl_transaction? swagger_path swagger_schema table table_exists? table_exists_query test test_with_mock text text_response timestamps to_constraints to_list to_param to_sql trace transaction traverse_errors traverse_validations unboxed_run underscore union union_all unique_constraint unique_index unsafe_validate_unique unsuffix unverified_path unverified_url update update! update_all update_change update_req_header update_resp_header upgrade_adapter url using validate_acceptance validate_change validate_confirmation validate_exclusion validate_format validate_inclusion validate_length validate_number validate_required validate_subset validations verify view_module view_template where windows with_cte with_io with_log with_mock with_mocks with_named_binding with_ties
# Exclude lib macros (these names are often used as var names)
exclude_lib_macros=
# Exclude lib funcs (these names are often used as user-func names)
exclude_lib_funcs=

[lexer_properties]
lexer.elixir.escape.sequence=0
lexer.elixir.format.sequence=0

[settings]
# default extension used when saving files
extension=ex

# MIME type
mime_type=text/x-elixir

# the following characters are these which a "word" can contains, see documentation
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# single comments, like # in this file
comment_single=#
# multiline comments
#comment_open=
#comment_close=

# set to false if a comment character/string should start at column 0 of a line, true uses any
# indentation of the line, e.g. setting to true causes the following on pressing CTRL+d
	#command_example();
# setting to false would generate this
#	command_example();
# This setting works only for single line comments
comment_use_indent=true

# context action command (please see Geany's main documentation for details)
context_action_cmd=

[indentation]
#width=4
# 0 is spaces, 1 is tabs, 2 is tab & spaces
#type=1

[build_settings]
# %f will be replaced by the complete filename
# %e will be replaced by the filename without extension
# (use only one of it at one time)
compiler=elixirc "%f"
run_cmd=elixir "%f"
