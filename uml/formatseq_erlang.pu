@startuml
skinparam componentStyle uml2
top to bottom direction

skinparam usecase {
	'S=40, V=100, H=240	(blue)
	BackgroundColor<<Init State>> #9A9AFF
	'S=40, V=100, H=300	(purple)
	BackgroundColor<<Init and Final State>> #FF9AFF
	'S=40, V=100, H=120	(green)
	BackgroundColor<<Init or Middle State>> #9AFF9A
	'S=40, V=100, H=60	(yellow)
	BackgroundColor<<Middle State>> #FFFF9A
	'S=40, V=100, H=0	(red)
	BackgroundColor<<Final State>> #FF9A9A
}

'Format: ~<F>.<P>.<Pad><Mod><C>
'
'<F>	- Is the field width of the printed argument.
'         A negative value means that the argument is left-justified
'         within the field, otherwise right-justified.
'
'<P>	- Is the precision of the printed argument.
'         A default value is used if no precision is specified.
'
'<Pad>	- Is the padding character. Only one padding char can be specified.
'         It is used for both the field width and precision.
'         The default padding char is ' ' (space).
'
'<Mod>	- Is the control sequence modifier [t l].
'         This is one or more char that change
'         the interpretation of Data. The current modifiers are t,
'         for Unicode translation, and l, for stopping p and P
'         from detecting printable characters.
'
'<C>	- Is the control sequence [c f e g s w p b x n i W P B X # +].

usecase (Number Sign [-+]) as format_num_sign <<Init State>>

usecase (Number Base\nWidth [0-9]+|*) as format_num_base_width <<Init or Middle State>>

usecase (Number Precision\nDot [.]) as format_num_prec_dot <<Init or Middle State>>
usecase (Number Precision\nWidth [0-9]+|*) as format_num_prec_width <<Middle State>>

usecase (Full Format Specifications\n[c f e g s w p b x n i W P B X # +]) as format_full_spec <<Final State>>

format_num_sign --> format_num_base_width
format_num_sign --> format_num_prec_dot
format_num_base_width --> format_full_spec
format_num_base_width --> format_num_prec_dot
format_num_prec_dot --> format_num_prec_width
format_num_prec_width --> format_full_spec

@enduml
