@startuml
skinparam componentStyle uml2
top to bottom direction

skinparam usecase {
	'S=40, V=100, H=240	(blue)
	BackgroundColor<<Init State>> #9A9AFF
	'S=40, V=100, H=300	(purple)
	BackgroundColor<<Init or Final State>> #FF9AFF
	'S=40, V=100, H=120	(green)
	BackgroundColor<<Init or Middle State>> #9AFF9A
	'S=40, V=100, H=60	(yellow)
	BackgroundColor<<Middle State>> #FFFF9A
	'S=40, V=100, H=0	(red)
	BackgroundColor<<Final State>> #FF9A9A
}

'A format specifier follows this prototype:
'%[flags][width][.precision][length]specifier

usecase (Length Specifications\n[h hh l ll j z t L]) as format_len_spec <<Init or Middle State>>

usecase (Full Format\nSpecifications\n[d i u o x X f F e E g G a A c s p n %]) as format_full_spec <<Init or Final State>>

usecase (Number Width\nFlags [-+0#\s]+) as format_num_flag <<Init State>>

usecase (Number Base\nWidth [1-9]{1}[0-9]*|\*) as format_num_base_width <<Init or Middle State>>

usecase (Number Precision\nDot [.]) as format_num_prec_dot <<Init or Middle State>>
usecase (Number Precision\nWidth [0-9]+|\*) as format_num_prec_width <<Middle State>>

format_num_flag --> format_num_base_width
format_num_flag --> format_num_prec_dot

format_num_base_width --> format_num_prec_dot
format_num_base_width --> format_len_spec
format_num_base_width --> format_full_spec

format_num_prec_dot --> format_num_prec_width
format_num_prec_dot --> format_len_spec
format_num_prec_dot --> format_full_spec

format_num_prec_width --> format_len_spec
format_num_prec_width --> format_full_spec

format_len_spec --> format_full_spec

@enduml
